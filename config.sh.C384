echo "running on $machine using $NODES nodes"
ulimit -s unlimited

export exptname=C384_singleres_fv3nems
export cores=`expr $NODES \* $corespernode`

# check that value of NODES is consistent with PBS_NP on theia and jet.
if [ "$machine" != 'wcoss' ]; then
   if [ $PBS_NP -ne $cores ]; then
     echo "NODES = ${NODES} PBS_NP = ${PBS_NP} cores = ${cores}"
     echo "NODES set incorrectly in preamble"
     exit 1
   fi
fi
export KMP_AFFINITY=disabled

export fg_gfs="run_fg_fv3_noiau.csh"
export ensda="enkf_run.csh"
export rungsi='run_gsi_4densvar.sh'
export rungfs='run_fv3_stochphys.sh' # ensemble forecast

export recenter_anal="true" # recenter enkf analysis around GSI hybrid 4DEnVar analysis
export do_cleanup='true' # if true, create tar files, delete *mem* files.
export controlanal='true'
export cleanup_fg='true'
export cleanup_ensmean='true'
export cleanup_anal='true'
export cleanup_controlanl='true'
export resubmit='true'
# python script checkdate.py used to check
# YYYYMMDDHH analysis date string to see if
# full ensemble should be saved to HPSS (returns 0 if 
# HPSS save should be done)
export save_hpss_subset="true" # save a subset of data each analysis time to HPSS

# override values from above for debugging.
#export cleanup_ensmean='false'
#export cleanup_anal='false'
#export cleanup_controlanl='false'
#export recenter_anal="false"
#export cleanup_fg='false'
#export resubmit='false'
#export do_cleanup='false'
 
if [ "$machine" == 'wcoss' ]; then
   export basedir=/gpfs/hps2/esrl/gefsrr/noscrub/${USER}
   export datadir=/gpfs/hps2/ptmp/${USER}
   export hsidir="/3year/NCEPDEV/GEFSRR/${USER}/${exptname}"
   module load hpss
   module load grib_util/1.0.3
   module load nco-gnu-sandybridge
elif [ "$machine" == 'theia' ]; then
   export basedir=/scratch3/BMC/gsienkf/${USER}
   export datadir=$basedir
   export hsidir="/ESRL/BMC/gsienkf/2year/whitaker/${exptname}"
   module load wgrib
   export WGRIB=`which wgrib`
   module load nco
elif [ "$machine" == 'gaea' ]; then
   export basedir=/lustre/f1/unswept/${USER}/nggps
   export datadir=$basedir
   export hsidir="/2year/BMC/gsienkf/whitaker/gaea/${exptname}"
elif [ "$machine" == 'jet' ]; then
   export basedir=/lfs3/projects/gfsenkf/${USER}
   export datadir=$basedir
   export hsidir="/HFIP/gfsenkf/2year/${USER}/${exptname}"
else
   echo "machine must be 'wcoss', 'theia', or 'jet', got $machine"
   exit 1
fi
export datapath="${datadir}/${exptname}"
export logdir="${datadir}/logs/${exptname}"
export corrlengthnh=1250
export corrlengthtr=1250
export corrlengthsh=1250
export lnsigcutoffnh=1.25
export lnsigcutofftr=1.25
export lnsigcutoffsh=1.25
export lnsigcutoffpsnh=1.25
export lnsigcutoffpstr=1.25
export lnsigcutoffpssh=1.25
export lnsigcutoffsatnh=1.25  
export lnsigcutoffsattr=1.25  
export lnsigcutoffsatsh=1.25  
export obtimelnh=1.e30       
export obtimeltr=1.e30       
export obtimelsh=1.e30       
export readin_localization=.true.
export massbal_adjust=.false.

# model parameters for ensemble (rest set in $rungfs)
# lo-res
export fg_proc=144 # number of total cores per enkf fg ens member. 
export layout="4, 6" # layout_x,layout_y (total # mpi tasks = $layout_x*$layout_y*6=fg_proc/fg_threads)
export fg_threads=1 # ens fcst threads
export RES=384 
export cdmbgwd="2.0,0.25"
export fv_sg_adj=0
export dt_atmos=225
export k_split=1
export n_split=6

export do_sppt=T
export SPPT=0.6
export SPPT_TSCALE=21600.
export SPPT_LSCALE=250.e3
export do_shum=T
export SHUM=0.005
export SHUM_TSCALE=21600.
export SHUM_LSCALE=250.e3
export do_skeb=T
export SKEB=1.0
export SKEB_TSCALE=21600.
export SKEB_LSCALE=250.e3
export SKEBNORM=1
export SKEB_NPASS=30
export SKEB_VDOF=5

# Assimilation parameters
export enkf_threads=6 
export gsi_control_threads=4
export JCAP=768 
export LONB=1536  
export LATB=768  
export LONA=$LONB
export LATA=$LATB      

export ANALINC=6

export LEVS=64
export FHMIN=3
export FHMAX=9
export FHOUT=3
FHMAXP1=`expr $FHMAX + 1`
export enkfstatefhrs=`python -c "print range(${FHMIN},${FHMAXP1},${FHOUT})" | cut -f2 -d"[" | cut -f1 -d"]"`
export IAU=.false. 
export iaufhrs="6"
#export IAU=.true. 
#export iaufhrs=$enkfstatefhrs

# other model variables set in ${rungfs}
# other gsi variables set in ${rungsi}

export SMOOTHINF=35
export npts=`expr \( $LONA \) \* \( $LATA \)`
export obs_datapath=${basedir}/gdas1bufr
#export obs_datapath=${basedir}/cfsr_dumps
export RUN=gdas1 # use gdas obs
export reducedgrid=.true.
export univaroz=.false.

export iassim_order=0

export covinflatemax=1.e2
export covinflatemin=1.0                                            
export analpertwtnh=0.75
export analpertwtsh=0.75
export analpertwttr=0.75
export pseudo_rh=.true.
export use_qsatensmean=.true.
                                                                    
export letkf_flag=.false.
export sprd_tol=1.e30
export varqc=.false.
export huber=.false.
export zhuberleft=1.e10
export zhuberright=1.e10

export biasvar=-500
if [ $controlanal == 'false' ];  then
   export lupd_satbiasc=.true.
   export numiter=4
else
   export lupd_satbiasc=.false.
   export numiter=1
fi
# use pre-generated bias files.
#export lupd_satbiasc=.false.
#export numiter=1


#export sprd_tol=10.
#export varqc=.true.
#export huber=.true.
#export zhuberleft=1.1
#export zhuberright=1.1
                                                                    
export nanals=80                                                    
                                                                    
export paoverpb_thresh=0.995
export saterrfact=1.0
export deterministic=.true.
export sortinc=.true.
                                                                    
export nitermax=3

export enkfscripts="${basedir}/scripts/${exptname}"
export homedir=$enkfscripts
export incdate="${enkfscripts}/incdate.sh"

if [ "$machine" == 'theia' ]; then
   export fv3gfspath=/scratch4/NCEPDEV/global/save/glopara/svn/fv3gfs
   export gsipath=/scratch3/BMC/gsienkf/whitaker/gsi/branches/EXP-enkflinhx
   export FIXFV3=${fv3gfspath}/fix_fv3
   export FIXGLOBAL=${fv3gfspath}/fix/fix_am
   export fixgsi=${gsipath}/fix
   export fixcrtm=${fixgsi}/crtm_2.2.3
   export execdir=${enkfscripts}/exec
   export nemsio_get=${execdir}/nemsio_get
   export enkfbin=${execdir}/global_enkf
   export FCSTEXEC=${execdir}/fv3.exe
   export gsiexec=${execdir}/global_gsi
   export nemsioget=${execdir}/nemsio_get
elif [ "$machine" == 'gaea' ]; then
   export FIXGLOBAL=${basedir}/fv3gfs/global_shared.v15.0.0/fix/fix_am
   export FIXFV3=${basedir}/fv3gfs/fix_fv3
   export gsipath=${basedir}/gsi/branches/EXP-enkflinhx
   export gsiexec=${gsipath}/src/global_gsi
   export fixgsi=${gsipath}/fix
   export fixcrtm=${fixgsi}/crtm-2.2.3
   export FCSTEXEC=${basedir}/fv3gfs/global_shared.v15.0.0/sorc/fv3gfs.fd/BUILD/bin/fv3_gfs_hydro.prod.32bit.x
   export utilexec=${gsipath}/util/EnKF/gfs/src/bin
   export enkfbin=${gsipath}/src/enkf/global_enkf
   export nemsioget=${basedir}/utils/sorc/nemsio_get
elif [ "$machine" == 'wcoss' ]; then
   export fv3gfspath=/gpfs/hps3/emc/global/noscrub/emc.glopara/svn/fv3gfs
   export gsipath=/gpfs/hps2/esrl/gefsrr/noscrub/Jeffrey.S.Whitaker/gsi/EXP-enkflinhx
   export FIXFV3=${fv3gfspath}/fix_fv3
   export FIXGLOBAL=${fv3gfspath}/fix/fix_am
   export fixgsi=${gsipath}/fix
   export fixcrtm=${fixgsi}/crtm-2.2.3
   export execdir=${enkfscripts}/exec
   export nemsio_get=${execdir}/nemsio_get
   export enkfbin=${execdir}/global_enkf
   export FCSTEXEC=${execdir}/fv3.exe
   export gsiexec=${execdir}/global_gsi
   export nemsioget=${execdir}/nemsio_get
elif [ "$machine" == 'jet' ]; then
   echo "jet not yet supported"
   exit 1
else
   echo "${machine} unsupported machine"
   exit 1
fi

#export ANAVINFO=${enkfscripts}/global_anavinfo.l${LEVS}.txt
#export ANAVINFO_ENKF=${ANAVINFO}
#export HYBENSINFO=${enkfscripts}/global_hybens_info.l${LEVS}.txt
#export CONVINFO=${fixgsi}/global_convinfo.txt
#export OZINFO=${enkfscripts}/global_ozinfo.txt
# set SATINFO in main.csh
#export SATINFO='${obs_datapath}'/bufr_'${analdate}'/global_satinfo.txt

export ANAVINFO=${fixgsi}/global_anavinfo.l64.txt
export ANAVINFO_ENKF=${ANAVINFO}
export HYBENSINFO=${fixgsi}/global_hybens_info.l64.txt
export CONVINFO=${fixgsi}/global_convinfo.txt
export OZINFO=${fixgsi}/global_ozinfo.txt
export SATINFO=${fixgsi}/global_satinfo.txt

# parameters for hybrid
export beta1_inv=0.125    # 0 means all ensemble, 1 means all 3DVar.
#export beta1_inv=0 # non-hybrid, pure ensemble
# these are only used if readin_localization=F
export s_ens_h=485      # a gaussian e-folding, similar to sqrt(0.15) times Gaspari-Cohn length
export s_ens_v=-0.485   # in lnp units.
# NOTE: most other GSI namelist variables are in ${rungsi}
#export use_prepb_satwnd=.true.
#export aircraft_bc=.false.
export use_prepb_satwnd=.false.
export aircraft_bc=.true.

cd $enkfscripts
echo "run main driver script"
csh main.csh
